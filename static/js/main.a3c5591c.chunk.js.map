{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contacts/Contacts.module.css","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","Form","state","name","number","handleCreateContact","e","preventDefault","currentTarget","value","setState","handleSubmit","props","contacts","onSubmit","find","contact","alert","reset","nameId","shortid","generate","numberId","this","s","form","htmlFor","type","onChange","pattern","id","required","button","Component","Filter","changeFilter","label","input","placeholder","Contacts","buttonDelete","console","log","length","list","map","item","onClick","notification","App","filter","handleSubmitContact","data","prevState","deleteContact","visibleContacts","normalaizedFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3c5591c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2eLzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3xo7F\",\"button\":\"Form_button__1Fxtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3t_X0\",\"input\":\"Filter_input__SSj-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__n_j_k\",\"item\":\"Contacts_item__1T4fn\",\"button\":\"Contacts_button__2si5A\",\"notification\":\"Contacts_notification__2quva\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = { title: PropTypes.string.isRequired };\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'components/Section';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleCreateContact = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in the contact list`);\r\n    }\r\n\r\n    onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const nameId = shortid.generate();\r\n    const numberId = shortid.generate();\r\n\r\n    return (\r\n      <Section title={this.props.title}>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label htmlFor={nameId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleCreateContact}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              id={nameId}\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor={numberId}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleCreateContact}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              id={numberId}\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>\r\n            Add new contact\r\n          </button>\r\n        </form>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, changeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        placeholder=\"Type contact name\"\r\n        value={value}\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Section from 'components/Section';\r\nimport s from './Contacts.module.css';\r\n\r\nconst Contacts = ({ title, contacts, buttonDelete }) => {\r\n  console.log(contacts.length === 0);\r\n  return (\r\n    <Section title={title}>\r\n      {contacts.length !== 0 ? (\r\n        <ul className={s.list}>\r\n          {contacts.map(contact => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <li className={s.item} key={id}>\r\n                {name}: {number}\r\n                <button\r\n                  className={s.button}\r\n                  type=\"button\"\r\n                  onClick={() => buttonDelete(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p className={s.notification}>You don't have a contacts yet :(</p>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n  buttonDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport Contacts from 'components/Contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleSubmitContact = data => {\n    const { name, number } = data;\n\n    const contacts = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, contacts] };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalaizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalaizedFilter),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.visibleContacts();\n\n    return (\n      <>\n        <Form\n          title=\"Phonebook\"\n          contacts={contacts}\n          onSubmit={this.handleSubmitContact}\n        />\n        <Filter value={filter} changeFilter={this.changeFilter} />\n        <Contacts\n          title=\"Contacts\"\n          contacts={visibleContacts}\n          buttonDelete={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}