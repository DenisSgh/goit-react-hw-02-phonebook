{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","section","Form","state","name","number","handleCreateContact","e","preventDefault","currentTarget","value","setState","handleSubmit","props","contacts","onSubmit","find","contact","alert","reset","nameId","shortid","generate","numberId","this","s","form","htmlFor","type","onChange","pattern","id","required","button","Component","Filter","changeFilter","Contacts","buttonDelete","list","map","item","onClick","App","filter","handleSubmitContact","data","prevState","deleteContact","visibleContacts","normalaizedFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ba73e8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3xo7F\",\"button\":\"Form_button__1Fxtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__n_j_k\",\"item\":\"Contacts_item__1T4fn\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = { title: PropTypes.string.isRequired };\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'components/Section';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleCreateContact = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in the contact list`);\r\n    }\r\n\r\n    onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const nameId = shortid.generate();\r\n    const numberId = shortid.generate();\r\n\r\n    return (\r\n      <Section title={this.props.title}>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label htmlFor={nameId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleCreateContact}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              id={nameId}\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor={numberId}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleCreateContact}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              id={numberId}\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>\r\n            Add new contact\r\n          </button>\r\n        </form>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\n// import s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, changeFilter }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input name=\"filter\" type=\"text\" value={value} onChange={changeFilter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Section from 'components/Section';\r\nimport s from './Contacts.module.css';\r\n\r\nconst Contacts = ({ title, contacts, buttonDelete }) => {\r\n  return (\r\n    <Section title={title}>\r\n      <ul className={s.list}>\r\n        {contacts.map(contact => {\r\n          const { id, name, number } = contact;\r\n\r\n          return (\r\n            <li className={s.item} key={id}>\r\n              {name}: {number}\r\n              <button type=\"button\" onClick={() => buttonDelete(id)}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Section>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n  buttonDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport Contacts from 'components/Contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleSubmitContact = data => {\n    const { name, number } = data;\n\n    const contacts = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, contacts] };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalaizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalaizedFilter),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.visibleContacts();\n\n    return (\n      <>\n        <Form\n          title=\"Phonebook\"\n          contacts={contacts}\n          onSubmit={this.handleSubmitContact}\n        />\n        <Filter value={filter} changeFilter={this.changeFilter} />\n        <Contacts\n          title=\"Contacts\"\n          contacts={visibleContacts}\n          buttonDelete={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2eLzw\"};"],"sourceRoot":""}